/*
    mInputs is designed to be an easy to access tool which transforms the default Mendix inputs with Material design inputs.
    Please do not make change in this document. You may make changes in m-inputs-variables.scss if you like.

    Author: Maurits de Koning-Hewitt, Mendix
*/

//Precheck if filled is the default method. If so, styling will be applied.
@if $m-inputs-filled {
    @each $m-inputs-widget in $m-inputs-widget-list {
        #{$m-inputs-widget} {
            position: relative;
            min-height: 56px;

            #{$m-inputs-control-label-div} {
                position: absolute;
                top: 8px;
                left: 16px;
                max-width: calc(100% - 32px);
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                font-size: 12px;
                font-weight: 400;
                transition: .1s ease-out;
                transform-origin: left top;
                pointer-events: none;
                color: $m-inputs-filled-label;
            }

            #{$m-inputs-form-control-div} {
                min-height: inherit;
                border-width: 0px 0px 1px 0px;
                border-style: solid;
                border-radius: 4px 4px 0px 0px;
                padding: 24px 16px 8px 16px;
                transition: .1s ease-out;
            }

            input:not([readonly]),
            .form-control:not([readonly]) {
                background-color: $m-inputs-filled-bg-enabled;
                border-color: $m-inputs-filled-border-color;
            }

            .form-control-static {
                border-color: transparent;
                background-color: transparent;
            }
        }

        //Enabled state, without input value

        #{$m-inputs-widget}:has(input[value=""]),
        #{$m-inputs-widget}:has(textarea:empty):not(:has(textarea:placeholder-shown)):not(:has(textarea:focus)) {
            &:not(:has(input:placeholder-shown)) {
                #{$m-inputs-control-label-div} {
                    top: 18px;
                    left: 8px;
                    font-size: 14px;
                    height: auto;
                    color: $form-input-placeholder-color;
                    padding: 0px 8px;
                }
            }
        }

        //Enabled state, focussed
        #{$m-inputs-widget}:has(input:focus):not(.has-error),
        #{$m-inputs-widget}:has(select:focus):not(.has-error),
        #{$m-inputs-widget}:has(textarea:focus):not(.has-error) {

            #{$m-inputs-control-label-div} {
                color: $brand-primary !important;
            }

            #{$m-inputs-form-control-div} {
                border-bottom: 2px solid $brand-primary;
                padding-bottom: 7px;
            }
        }

        //Enabled state, focussed, without input value
        #{$m-inputs-widget}:has(input[value=""]):has(input:focus),
        #{$m-inputs-widget}:has(textarea:empty):has(textarea:focus) {

            #{$m-inputs-control-label-div} {
                top: 8px;
                left: 8px;
                font-size: 12px;
                height: auto;
                padding: 0px 8px;
            }
        }

        //Enabled state, hover without focus
        #{$m-inputs-widget}:has(input:hover),
        #{$m-inputs-widget}:has(textarea:hover),
        #{$m-inputs-widget}:has(button:hover),
        #{$m-inputs-widget}:has(select:hover) {

            #{$m-inputs-form-control-div} {
                &:not([disabled]) {
                    background-color: $m-inputs-filled-bg-hovered;
                }
            }
        }

        //Readonly state
        #{$m-inputs-widget}:has(input[readonly]),
        #{$m-inputs-widget}:has(textarea[readonly]),
        #{$m-inputs-widget}:has(select[readonly]) {
            input {
                background-color: $m-inputs-filled-bg-enabled;
                border-color: $m-inputs-filled-border-color;
            }
        }

        //Disabled state
        #{$m-inputs-widget}:has(input[disabled]),
        #{$m-inputs-widget}:has(textarea[disabled]),
        #{$m-inputs-widget}:has(select[disabled]) {
            &::before {
                position: absolute;
                height: 100%;
                width: 100%;
                content: '';
                background-color: $m-inputs-filled-disabled;
                z-index: 3;
            }
        }


        // Error state
        #{$m-inputs-widget}.has-error {
            #{$m-inputs-control-label-div} {
                color: $brand-danger;
            }

            #{$m-inputs-form-control-div} {
                border-bottom: 2px solid $brand-danger;
                padding-bottom: 7px;
                box-shadow: none;
            }

            .alert {
                margin-top: 0px;
                padding: 4px 16px 0px 16px;
                background-color: transparent;
                border: 0px;
                color: $brand-danger;
            }
        }

        // Without label
        #{$m-inputs-widget}:not(:has(#{$m-inputs-control-label-div})) {
            #{$m-inputs-form-control-div} {
                padding: 16px;
            }

            &:has(input:focus) {
                #{$m-inputs-form-control-div} {
                    padding: 16px 16px 15px 16px;
                }
            }
        }

    }

    // Additional styling for datepicker widget & reference set selector widget

    #{$m-inputs-widget-datepicker},
    #{$m-inputs-widget-referencesetselector} {

        #{$m-inputs-control-label-div} {
            top: 8px !important;
            font-size: 12px !important;
        }

        #{$m-inputs-form-control-div} {
            padding-right: 52px;
        }

        button,
        .btn {
            position: absolute;
            top: 0px;
            right: 0px;
            padding: 16px;
            margin: 0px;
            background-color: transparent;
            border-color: transparent;

            .glyphicon {
                font-size: 20px;
                color: $m-inputs-filled-input;
            }
        }
    }
}